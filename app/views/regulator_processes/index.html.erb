<!-- Full Page Image Header Area -->
<div id="top" class="header">
  <div class="vert-text">
    <div class="container-fluid">
      <div class="row-fluid">
        <div class="col-xs-12">
          <h1>Cloud regulator</h1>
          <div id="graph" style="height: 350px;"></div>
        </div>
      </div>
    </div>
  </div>
</div>
<!-- /Full Page Image Header Area -->

<div id="config" class="intro">
  <div class="container">
    <% if @raspberry %>
      <div class="row">
        <div class="col-md-6 col-md-offset-3 text-center">
          <h4><%= @raspberry.ip_address ? "Rasperry ip: #{@raspberry.ip_address}" : 'No Rasperry online' %></h4>
        </div>
      </div>
    <% end %>
    <div class="row">
      <div class="col-md-6 col-md-offset-3 text-center">
        <h2>Reference</h2>
          <%= form_for @reference do |f| %>
            <label for="" class="pull-left">Manual mode</label>
            <div class="pull-right">
              <%= f.radio_button(:manual_mode, true) %>
              <%= f.label(:manual_mode_true, 'On') %>
              <%= f.radio_button(:manual_mode, false) %>
              <%= f.label(:manual_mode_false, 'Off') %>
            </div>
            <br>
            <br>
            <%= f.label :reference_value, class: 'pull-left' %>
            <%= f.number_field :reference_value, placeholder: "Reference value", class: 'numeric pull-right', step: :any %>
            <div class="clearfix"></div>
            <br><br>
            <%= f.submit 'Update reference', class: 'btn btn-default' %>
          <% end %>
        </p>
      </div>
    </div>
    <br><br>
    <hr>
    <br><br>
    <div class="row">
      <%= render 'shared/process_config_form', process_config: @pid_config, title: 'PID Config' %>
      <div class="col-md-2"></div>
      <%= render 'shared/process_config_form', process_config: @pi_config, title: 'PI Config' %>
    </div>
  </div>
</div>

<script>
  var _updateRate = 1000;
  update(); // update the graph immediately

  var graph = Morris.Line({
      element: 'graph',
      data: [],
      xkey: 'x',
      ykeys: ['y', 'z', 'a', 'o'],
      labels: ['angle', 'position', 'latency', 'output'],
      xLabels: 'second',
      parseTime: false,
      hideHover: true,
      fillOpacity: 0,
      pointSize: 0
  });


  function getParameterByName(name) {
      name = name.replace(/[\[]/, "\\\[").replace(/[\]]/, "\\\]");
      var regex = new RegExp("[\\?&]" + name + "=([^&#]*)"),
          results = regex.exec(location.search);
      return results == null ? "" : decodeURIComponent(results[1].replace(/\+/g, " "));
  }

  var paramUpdateRate = getParameterByName("rate");
  if (paramUpdateRate !== "") {
    _updateRate = parseInt(paramUpdateRate)*1000;
  }

  var req = 0;
  function update() {
    $.getJSON('/live_cycles?req=' + req + "&points=" + getParameterByName("points"), function(jsonData) {
      graph.setData(jsonData);
    });
    req++;
  }
  setInterval(update, _updateRate);


  // Only allow numeric input
  $('.numeric').keypress(function(e) {
    var a = [];
    var k = e.which;
    for (i = 48; i < 58; i++)
      a.push(i);
    a.push(45);
    a.push(46);
    if (!($.inArray(k,a)>=0))
      e.preventDefault();
  });

</script>
